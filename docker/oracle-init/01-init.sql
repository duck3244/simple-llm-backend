-- Oracle 데이터베이스 초기화 스크립트
-- Simple LLM Backend용 스키마 및 사용자 생성

-- 사용자 생성 (Oracle 12c 이상에서는 C## 접두사 필요)
BEGIN
    EXECUTE IMMEDIATE 'CREATE USER llmchat IDENTIFIED BY llmchat123';
EXCEPTION
    WHEN OTHERS THEN
        IF SQLCODE != -1920 THEN -- 사용자가 이미 존재하는 경우 무시
            RAISE;
        END IF;
END;
/

-- 권한 부여
GRANT CONNECT, RESOURCE TO llmchat;
GRANT CREATE SESSION TO llmchat;
GRANT CREATE TABLE TO llmchat;
GRANT CREATE SEQUENCE TO llmchat;
GRANT CREATE VIEW TO llmchat;
GRANT CREATE PROCEDURE TO llmchat;
GRANT CREATE TRIGGER TO llmchat;
GRANT UNLIMITED TABLESPACE TO llmchat;

-- llmchat 사용자로 전환하여 테이블 생성
CONNECT llmchat/llmchat123@XE;

-- LLM 요청/응답 로그 테이블
CREATE TABLE LLM_LOGS (
    ID NUMBER(19) PRIMARY KEY,
    REQUEST_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ENGINE VARCHAR2(50) NOT NULL,
    PROMPT CLOB,
    RESPONSE CLOB,
    RESPONSE_TIME_MS NUMBER(19),
    SUCCESS NUMBER(1) DEFAULT 1,
    ERROR_MESSAGE VARCHAR2(1000),
    REQUEST_IP VARCHAR2(45),
    USER_AGENT VARCHAR2(500),
    CREATED_BY VARCHAR2(100) DEFAULT USER,
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR2(100) DEFAULT USER,
    UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 시퀀스 생성
CREATE SEQUENCE LLM_LOGS_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- 트리거 생성 (ID 자동 증가)
CREATE OR REPLACE TRIGGER LLM_LOGS_TRG
    BEFORE INSERT ON LLM_LOGS
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        :NEW.ID := LLM_LOGS_SEQ.NEXTVAL;
    END IF;
    :NEW.CREATED_DATE := CURRENT_TIMESTAMP;
    :NEW.UPDATED_DATE := CURRENT_TIMESTAMP;
END;
/

-- 인덱스 생성
CREATE INDEX IDX_LLM_LOGS_TIME ON LLM_LOGS(REQUEST_TIME);
CREATE INDEX IDX_LLM_LOGS_ENGINE ON LLM_LOGS(ENGINE);
CREATE INDEX IDX_LLM_LOGS_SUCCESS ON LLM_LOGS(SUCCESS);
CREATE INDEX IDX_LLM_LOGS_CREATED ON LLM_LOGS(CREATED_DATE);

-- 시스템 메트릭 테이블
CREATE TABLE SYSTEM_METRICS (
    ID NUMBER(19) PRIMARY KEY,
    METRIC_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    METRIC_NAME VARCHAR2(100) NOT NULL,
    METRIC_VALUE NUMBER(15,4),
    METRIC_UNIT VARCHAR2(20),
    METRIC_TYPE VARCHAR2(50),
    CREATED_BY VARCHAR2(100) DEFAULT USER,
    CREATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 시퀀스 생성
CREATE SEQUENCE SYSTEM_METRICS_SEQ
    START WITH 1
    INCREMENT BY 1
    NOCACHE
    NOCYCLE;

-- 트리거 생성
CREATE OR REPLACE TRIGGER SYSTEM_METRICS_TRG
    BEFORE INSERT ON SYSTEM_METRICS
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        :NEW.ID := SYSTEM_METRICS_SEQ.NEXTVAL;
    END IF;
    :NEW.CREATED_DATE := CURRENT_TIMESTAMP;
END;
/

-- 인덱스 생성
CREATE INDEX IDX_METRICS_TIME ON SYSTEM_METRICS(METRIC_TIME);
CREATE INDEX IDX_METRICS_NAME ON SYSTEM_METRICS(METRIC_NAME);
CREATE INDEX IDX_METRICS_TYPE ON SYSTEM_METRICS(METRIC_TYPE);

-- 사용자 세션 테이블 (선택사항)
CREATE TABLE USER_SESSIONS (
    ID NUMBER(19) PRIMARY KEY,
    SESSION_ID VARCHAR2(100) UNIQUE NOT NULL,
    USER_IP VARCHAR2(45),
    USER_AGENT VARCHAR2(500),
    SESSION_START TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    SESSION_END TIMESTAMP,
    REQUEST_COUNT NUMBER(10) DEFAULT 0,
    LAST_ACTIVITY TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    STATUS VARCHAR2(20) DEFAULT 'ACTIVE'
);

-- 시퀀스 및 트리거
CREATE SEQUENCE USER_SESSIONS_SEQ START WITH 1 INCREMENT BY 1;

CREATE OR REPLACE TRIGGER USER_SESSIONS_TRG
    BEFORE INSERT ON USER_SESSIONS
    FOR EACH ROW
BEGIN
    IF :NEW.ID IS NULL THEN
        :NEW.ID := USER_SESSIONS_SEQ.NEXTVAL;
    END IF;
END;
/

-- 인덱스
CREATE INDEX IDX_SESSIONS_ID ON USER_SESSIONS(SESSION_ID);
CREATE INDEX IDX_SESSIONS_IP ON USER_SESSIONS(USER_IP);
CREATE INDEX IDX_SESSIONS_STATUS ON USER_SESSIONS(STATUS);

-- 뷰 생성: 통계 요약
CREATE OR REPLACE VIEW V_LLM_STATS AS
SELECT 
    ENGINE,
    COUNT(*) AS TOTAL_REQUESTS,
    SUM(CASE WHEN SUCCESS = 1 THEN 1 ELSE 0 END) AS SUCCESSFUL_REQUESTS,
    ROUND(AVG(CASE WHEN SUCCESS = 1 THEN RESPONSE_TIME_MS END), 2) AS AVG_RESPONSE_TIME,
    MIN(CASE WHEN SUCCESS = 1 THEN RESPONSE_TIME_MS END) AS MIN_RESPONSE_TIME,
    MAX(CASE WHEN SUCCESS = 1 THEN RESPONSE_TIME_MS END) AS MAX_RESPONSE_TIME,
    ROUND((SUM(CASE WHEN SUCCESS = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS SUCCESS_RATE
FROM LLM_LOGS
GROUP BY ENGINE;

-- 뷰 생성: 시간별 통계
CREATE OR REPLACE VIEW V_LLM_HOURLY_STATS AS
SELECT 
    TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24') AS HOUR,
    ENGINE,
    COUNT(*) AS REQUEST_COUNT,
    ROUND(AVG(CASE WHEN SUCCESS = 1 THEN RESPONSE_TIME_MS END), 2) AS AVG_RESPONSE_TIME,
    ROUND((SUM(CASE WHEN SUCCESS = 1 THEN 1 ELSE 0 END) * 100.0 / COUNT(*)), 2) AS SUCCESS_RATE
FROM LLM_LOGS
WHERE REQUEST_TIME >= SYSDATE - 7 -- 최근 7일
GROUP BY TO_CHAR(REQUEST_TIME, 'YYYY-MM-DD HH24'), ENGINE
ORDER BY HOUR DESC, ENGINE;

-- 샘플 데이터 삽입
INSERT INTO LLM_LOGS (ENGINE, PROMPT, RESPONSE, RESPONSE_TIME_MS, SUCCESS) VALUES
('vllm', 'Hello, world!', 'Hello! How can I help you today?', 1250, 1);

INSERT INTO LLM_LOGS (ENGINE, PROMPT, RESPONSE, RESPONSE_TIME_MS, SUCCESS) VALUES
('sglang', 'What is AI?', 'Artificial Intelligence is a field of computer science that focuses on creating systems capable of performing tasks that typically require human intelligence.', 1800, 1);

INSERT INTO LLM_LOGS (ENGINE, PROMPT, RESPONSE, RESPONSE_TIME_MS, SUCCESS) VALUES
('vllm', 'Explain machine learning', 'Machine learning is a subset of artificial intelligence that enables computers to learn and improve from experience without being explicitly programmed.', 2100, 1);

-- 시스템 메트릭 샘플 데이터
INSERT INTO SYSTEM_METRICS (METRIC_NAME, METRIC_VALUE, METRIC_UNIT, METRIC_TYPE) VALUES
('cpu_usage', 45.2, 'percent', 'system');

INSERT INTO SYSTEM_METRICS (METRIC_NAME, METRIC_VALUE, METRIC_UNIT, METRIC_TYPE) VALUES
('memory_usage', 1024.5, 'MB', 'system');

INSERT INTO SYSTEM_METRICS (METRIC_NAME, METRIC_VALUE, METRIC_UNIT, METRIC_TYPE) VALUES
('disk_usage', 75.8, 'percent', 'system');

INSERT INTO SYSTEM_METRICS (METRIC_NAME, METRIC_VALUE, METRIC_UNIT, METRIC_TYPE) VALUES
('network_throughput', 125.6, 'Mbps', 'network');

-- 커밋
COMMIT;

-- 권한 확인을 위한 정보 출력
SELECT 'LLM_LOGS 테이블 생성 완료: ' || COUNT(*) || '개 레코드' FROM LLM_LOGS;
SELECT 'SYSTEM_METRICS 테이블 생성 완료: ' || COUNT(*) || '개 레코드' FROM SYSTEM_METRICS;

PROMPT
PROMPT =====================================
PROMPT  Oracle 데이터베이스 초기화 완료
PROMPT =====================================
PROMPT  사용자: llmchat
PROMPT  비밀번호: llmchat123
PROMPT  스키마: LLM_LOGS, SYSTEM_METRICS
PROMPT  뷰: V_LLM_STATS, V_LLM_HOURLY_STATS
PROMPT =====================================