version: '3.8'

services:
  # Simple LLM Backend 애플리케이션
  simple-llm-backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: simple-llm-backend
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - VLLM_BASE_URL=http://vllm:8000
      - SGLANG_BASE_URL=http://sglang:30000
      - DB_HOST=oracle
      - DB_PORT=1521
      - DB_SID=XE
      - DB_USERNAME=llmchat
      - DB_PASSWORD=${DB_PASSWORD:-llmchat123}
      - JAVA_OPTS=-Xms512m -Xmx2g -XX:+UseG1GC -Dfile.encoding=UTF-8
    volumes:
      - ./logs:/app/logs
      - ./config:/app/config:ro
    networks:
      - llm-network
    depends_on:
      oracle:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Oracle 데이터베이스
  oracle:
    image: container-registry.oracle.com/database/express:21.3.0-xe
    container_name: oracle-xe
    ports:
      - "1521:1521"
      - "5500:5500"
    environment:
      - ORACLE_PWD=${DB_PASSWORD:-llmchat123}
      - ORACLE_CHARACTERSET=AL32UTF8
    volumes:
      - oracle_data:/opt/oracle/oradata
      - ./oracle-init:/opt/oracle/scripts/setup:ro
    networks:
      - llm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sqlplus", "-L", "system/$$ORACLE_PWD@//localhost:1521/XE", "<<<", "SELECT 1 FROM DUAL;"]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 120s

  # vLLM 서버 (선택사항)
  vllm:
    image: vllm/vllm-openai:latest
    container_name: vllm-server
    ports:
      - "8000:8000"
    command: >
      --model microsoft/DialoGPT-medium
      --served-model-name default
      --host 0.0.0.0
      --port 8000
    volumes:
      - vllm_cache:/root/.cache
    networks:
      - llm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - vllm

  # SGLang 서버 (선택사항)
  sglang:
    image: lmsysorg/sglang:latest
    container_name: sglang-server
    ports:
      - "30000:30000"
    command: >
      python -m sglang.launch_server
      --model-path microsoft/DialoGPT-medium
      --host 0.0.0.0
      --port 30000
    volumes:
      - sglang_cache:/root/.cache
    networks:
      - llm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:30000/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 120s
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    profiles:
      - sglang

  # Redis 캐시 (선택사항)
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - llm-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    profiles:
      - cache

  # Nginx 리버스 프록시 (선택사항)
  nginx:
    image: nginx:alpine
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    networks:
      - llm-network
    depends_on:
      - simple-llm-backend
    restart: unless-stopped
    profiles:
      - nginx

networks:
  llm-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  oracle_data:
    driver: local
  vllm_cache:
    driver: local
  sglang_cache:
    driver: local
  redis_data:
    driver: local